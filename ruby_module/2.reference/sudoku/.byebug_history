continue
8,8
continue
display board[8][8]
quit
board[8][8].in_conflict
board[8][8].in_conflict = false
board[8][8].in_conflict
board[8][8]
continue
quit
clear
n
board.flatten
quit
8,8
continue
n
s
continue
cotinue
n
display self.tile_conflicts
s
continue
display board.tile_conflicts
board.tile_conflicts
p self.tile_conflicts
continue
quit
board.flatten
board
continue
sb
n
@tile_conflicts
n
s
@tile_conflicts
n
s
continue
display self.board.tile_conflicts
n
self.board.tile_conflicts
self.tile_conflicts
continue
quit
clear
n
quit
__FILE__
self
sudoku
quit
clear
sudoku.board.clear_conflicts
sudoku.board.tile_conflicts
clear
sudoku.board.tile_conflicts
sudoku.board.tile_conflict
p board.tile_conflicts
quit
board.clear_conflicts
board
board.clear_conflicts
p board.tile_conflicts
continue
quit
board.already_in_column?([8,8], '2')
board.already_in_column?([8,0], '2')
board.already_in_column?([8,0])
board.has_conflicts?([8,0])
display board.has_conflicts?([8,8])
display board.board[8][8]
board.has_conflicts?([8,8])
has_conflicts?([8,8])
]])
has_conflicts?([[8,8]
board.board.flatten
board.board.flatten.any? { |tile| tile.value == "#"}
board.solved?
continue
display board.board[8][8]
board.board[8][8]
continue
board.board[8][8]
board.solved?
quit
clear
continue
8,8
p board.solved?
quit
p board.solved?
n
p board.board[8][8]
system 'clear'
p board
display :board
continue
